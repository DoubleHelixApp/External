# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: false
        install: >-
          git
          autotools
          gcc
          zlib-devel
          libbz2-devel
          liblzma-devel
          mingw-w64-x86_64-tools-git
          ncurses-devel
    - name: Clone repositories
      shell: msys2 {0}
      run: |
        git clone --depth 1 --recurse-submodules --branch 1.20 https://github.com/samtools/htslib
        git clone --depth 1 --recurse-submodules --branch 1.20 https://github.com/samtools/samtools
        git clone --depth 1 --recurse-submodules --branch 1.20 https://github.com/samtools/bcftools
        git clone --depth 1 --recurse-submodules --branch v0.7.18 https://github.com/lh3/bwa
        git clone --depth 1 --recurse-submodules --branch v2.28 https://github.com/lh3/minimap2
    - name: Compile htslib
      shell: msys2 {0}
      run: |
        pushd .
        cd htslib
        autoreconf -i
        ./configure
        make -j32
        popd
    - name: Compile samtools
      shell: msys2 {0}
      run: |
        pushd .
        cd samtools
        autoheader
        autoconf -Wno-syntax
        ./configure
        make -j32
        popd
    - name: Compile bcftools
      shell: msys2 {0}
      run: |
        pushd .
        cd bcftools
        autoheader
        autoconf -Wno-syntax
        ./configure
        make -j32
        popd
    - name: Compile bwa
      shell: msys2 {0}
      run: |
        pushd .
        cd bwa
        make -j32
        popd      
    - name: Compile minimap2
      shell: msys2 {0}
      run: |
        pushd .
        cd minimap2
        make -j32
